/*
 * Домашнее задание к уроку 5
 * Ю.М.Калинцев
 * 13/09/2021
 */
#include <iostream>
#include <cstdlib>
using namespace std;

static size_t len; // для 4 задания

//======================================================================================================================
//1. Написать функцию которая выводит массив double чисел на экран. Параметры функции это сам массив и его размер.
//Вызвать эту функцию из main.
//======================================================================================================================
void task_1(double *funcar, int x){
    for(int i = 0; i<x; i++) {
        funcar[i] = static_cast<double>(rand() % 500-250) / 0.587987;
        cout << funcar[i] << ", ";
    }
}

//======================================================================================================================
//2. Задать целочисленный массив, состоящий из элементов 0 и 1. Например: [ 1, 1, 0, 0, 1, 0, 1, 1, 0, 0 ].
//Написать функцию, заменяющую в принятом массиве 0 на 1, 1 на 0. Выводить на экран массив до изменений и после.
//======================================================================================================================
void task_2(){
    size_t size = 9;
    bool arr[size];
    // создаем рандомный массив из 0 и 1
    for(int i=0; i<size; i++) {
        arr[i] = (rand() % 100) % 2 == 0;
        cout << arr[i] << " ";
    }
    cout << endl;
    for(int j=0;j<size;j++) {
        arr[j] = !arr[j];
        cout << arr[j] << " ";
    }
}
//======================================================================================================================
//3. Задать пустой целочисленный массив размером 8. Написать функцию, которая с помощью цикла заполнит его
//значениями 1 4 7 10 13 16 19 22. Вывести массив на экран.
//======================================================================================================================
void task_3(){
    int arr[8], k = -2;
    for(int i=0;i<8;i++) {
        k += 3;
        arr[i] = k;
        cout << arr[i] << " ";
    }
}
//======================================================================================================================
//4. * Написать функцию, которой на вход подаётся одномерный массив и число n (может быть положительным, или
//отрицательным), при этом метод должен циклически сместить все элементы массива на n позиций.
//числа перемещаютя по кругу {1,2,3,4,5} n+2 -> {4,5,1,2,3} || n-2 -> {3,4,5,1,2}
//======================================================================================================================
void task_4(int *arr, int mv){
    size_t shift; //переменная для удобства

    if((mv > 0) && (mv != len))
    {
        shift = mv;
        int temp[shift]; //временный массив для записи переносимых значений
        for (int i = 0; i < shift; i++) //инициализация временного массива
            temp[i] = arr[len - shift + i];
        for (int i = 0; i <= len - shift; i++) //сдвиг вправо
            arr[len - (i+1)] = arr[len - (shift + i + 1)];
        for (int j = 0; j < shift; j++) //возвращение значений в массив
            arr[j] = temp[j];
    }
    else if((mv < 0) && (mv != -len))
    {
        shift = (mv * -2)/2;//перевод в числа в положительное
        int temp[shift];
        for(int i=0;i<shift;i++)//инициализация temp
            temp[i] = arr[i];
        for(int i=0;i<len-shift;i++)//сдвиг влево
            arr[i] = arr[shift+i];
        for(int i=0;i<shift;i++)//возвращение значений в массив
            arr[len-shift+i] = temp[i];
    }
    //итог
    for (int i = 0; i < len; i++)
        cout << arr[i] << " ";
}
//======================================================================================================================
//5. ** Написать функцию, которой передается не пустой одномерный целочисленный массив, она должна вернуть
//истину если в массиве есть место, в котором сумма левой и правой части массива равны.
//Примеры: checkBalance([1, 1, 1, || 2, 1]) → true, checkBalance ([2, 1, 1, 2, 1]) → false,
//checkBalance ([10, || 1, 2, 3, 4]) → true. Абстрактная граница показана символами ||, эти символы в массив не входят.
//(перебрать массив (рандом()%8+1), сравнивая сумму текущего числа и пердыдущих значений с суммой тех что стоят впереди,
// если найден баланс - выйти из цикла)
//======================================================================================================================

bool task_5(int *arr)
{
    int remains=0;
    int sum=0;

    for(int i = 0; i<5; i++)
        remains += arr[i];
    cout << "total sum = " << remains << endl;
    if (remains % 2 == 0)
    {
        for (int i = 0; i < 5; i++)
        {
            sum += arr[i];
            remains -= arr[i];
            if (sum == remains)
                return true;
        }
    }
    return false;
}

int main(){
    srand(time(0));

    //для task_1:
    cout << "\n task_1: \n";
    int size = 10, *psize;
    psize = &size;
    double arr[size];
    task_1(arr, *psize);

    cout << "\n\n task_2: \n";
    task_2();

    cout << "\n\n task_3: \n";
    task_3();

    //для task_4:
    int n, cycle[]{1,2,3,4,5};
    cout << "\n\n task_4: \n1 2 3 4 5 \n move range: ";
    cin >> n;
    int *pn = &n;
    len = sizeof(cycle) / sizeof(cycle[0]);
    task_4(cycle, *pn);

    //для task_5:
    cout << endl << "\n task_5: \narray - ";
    int balance[5];//{1,2,3,1,5}; //{1,2,3,4,5};
    for(int i=0; i<5; i++)
    {
        balance[i] = rand() % 5 + 1;
        cout << balance[i];
    }
    cout << endl << (task_5(balance) ? "true" : "false") << endl;
    return 0;
}