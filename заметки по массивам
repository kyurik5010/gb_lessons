Важно! Массивы — иммутабельные (неизменяемые). Вы можете 
скорректировать значения отдельных элементов, но не сам 
массив — нельзя изменить его длину или присвоить одному 
массиву другой.


1)

Макрос _countof() (в MSVS заголовочный файл <cstdlib>) 
возвращает размер массива, то есть количество элементов. 
В С++17 появился стандартный шаблон функции std::size(), 
которая делает то же самое (а еще имеет перегруженную версию, 
которая определяет размер стандартного контейнера).

пример использования:
------------------------------------------------------------
int a[4]; 
std::cout << sizeof(a) << ' ' << std::size(a) << '\n';
------------------------------------------------------------
Вывод:
------------------------------------------------------------
16 4
------------------------------------------------------------

Ещё один способ:поделить размер всего массива на размер одного 
элемента массива:
------------------------------------------------------------
int array[] = { 1, 3, 3, 4, 5, 9, 14, 17 };
    std::cout << "The array has: " << sizeof(array) / sizeof(array[0]) << " elements\n";
------------------------------------------------------------
вывод:
------------------------------------------------------------
The array has 8 elements
------------------------------------------------------------

2)

В C++11 в стандартной библиотеке появились свободные (не члены) 
шаблоны функций std::begin() и std::end(). Вызванная для массива 
std::begin() возвращает указатель на первый элемент массива, 
std::end() на past-the-last элемент. (Есть также константные 
версии: std::cbegin(), std::cend().) 
Это позволяет использовать массивы в диапазонном for.

int a[4]{ 4, 3, 2, 1 }; 
for (auto t : a)
    { 
    std::cout << t << ' ';
    }

А также в стандартных алгоритмах:

std::sort(std::begin(a), std::end(a));

3)

При работе с символьными массивами стоит учитывать, что 
неинициализированный char x[10]; (или инициализированный 0)
заполнить при помощи выражения x = 'string'; не получится.
См. начало доукмента
    Варианты решения:
Пользовательским вводом cin >> x;
функцией копирования строки strcpy(x, "string");
